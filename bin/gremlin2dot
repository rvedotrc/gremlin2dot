#!/usr/bin/env ruby
# vi: set ts=2 sw=2 :

require 'optparse'

def error(message)
  $stderr.puts message
  exit 2
end

endpoint = nil
query = nil
use_stdin = false

json_file = nil

canon_file = nil
dot_file = nil
png_file = nil
svg_file = nil

opts = OptionParser.new
opts.on('-e', '--endpoint URL', 'The URL of the Gremlin endpoint') {|v| endpoint = v }
opts.on('-q', '--query QUERY', 'The Gremlin query to run') {|v| query = v }
opts.on('--stdin', 'Read Gremlin results as JSON from standard input') { use_stdin = true }
opts.on('--save-json FILE', 'Save the JSON to FILE') {|v| json_file = v }
opts.on('--canon FILE', 'Write the results as canonical DOT to FILE') {|v| canon_file = v }
opts.on('--dot FILE', 'Write the results as placed DOT to FILE') {|v| dot_file = v }
opts.on('--png FILE', 'Write the results as PNG to FILE') {|v| png_file = v }
opts.on('--svg FILE', 'Write the results as SVG to FILE') {|v| svg_file = v }
opts.order!

if !canon_file and !dot_file and !png_file and !svg_file
  canon_file = "/dev/stdout"
end

if endpoint.nil? != query.nil?
  error "Either specify both --endpoint and --query, or specify --stdin 1"
end

if use_stdin != endpoint.nil?
  error "Either specify both --endpoint and --query, or specify --stdin 2"
end

require 'json'
require 'gremlin2dot'
require 'ruby-graphviz'

json_text = if use_stdin
              $stdin.read
            else
              require 'rest-client'
              RestClient.post(
                endpoint,
                { gremlin: query }.to_json,
                { content_type: :json, accept: :json },
              ).body
            end

if json_file
  IO.write(json_file, json_text)
end

query_results = JSON.parse(json_text)
unmangled_data = Gremlin2Dot::Unmangler.new.unmangle(query_results)
g = Gremlin2Dot::GraphBuilder.build(unmangled_data)

if canon_file
  g.output(canon: canon_file)
end

if dot_file
  g.output(dot: dot_file)
end

if png_file
  g.output(png: png_file)
end

if svg_file
  g.output(svg: svg_file)
end

exit
